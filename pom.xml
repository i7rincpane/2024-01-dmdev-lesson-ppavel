<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.dmdev</groupId>
    <artifactId>my-maven</artifactId>
    <version>1.0.0</version>
    <!--<version>1.0.0</version>-->

    <packaging>pom</packaging>

    <name>my-maven</name>
    <!-- FIXME change it to the project's website -->
    <url>http://www.example.com</url>
    <modules>
        <module>database</module>
        <module>service</module>
        <module>web</module>
    </modules>

    <scm>
        <connection>scm:git:git@github.com:i7rincpane/2024-01-dmdev-ppavel.git</connection>
        <developerConnection>scm:git:git@github.com:i7rincpane/2024-01-dmdev-ppavel.git</developerConnection>
        <url>https://github.com/i7rincpane/2024-01-dmdev-ppavel</url>
      <tag>my-maven-1.0.0</tag>
  </scm>

    <properties>
        <app.env>dev</app.env>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>18</maven.compiler.source>
        <maven.compiler.target>18</maven.compiler.target>
        <spring.version>5.2.6.RELEASE</spring.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>jakarta.servlet</groupId>
                <artifactId>jakarta.servlet-api</artifactId>
                <version>6.0.0</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.11</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-beans</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

        </dependencies>
    </dependencyManagement>
    <build>
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <!--    <finalName>ROOT</finalName>-->

        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>3.0.0-M7</version>
            </plugin>

        </plugins>

        <pluginManagement>
            <plugins>

                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.8.8</version>
                    <executions>
                        <execution>
                            <id>prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal> <!-- автоматически привязывается к фазе до компиляции-->
                            </goals>
                        </execution>
                        <execution>
                            <id>report</id>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <phase>prepare-package
                            </phase>   <!-- рекамендуется запускать в данной фазе, после тестов и преде упаковкой-->
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.9.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>3.1.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>3.0.0-M5</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.3.0</version>
                    <executions>
                        <execution>
                            <id>copy-docker-files</id> <!--нужно както пометить -->
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <phase>
                                validate
                            </phase>
                            <configuration>
                                <outputDirectory>${project.basedir}/target
                                </outputDirectory> <!--обращаемся к тегу project, через него можем обратиться к любому тегу в текущем помнике -->
                                <resources>
                                    <resource>
                                        <directory>${project.basedir}/docker
                                        </directory> <!--basedir хранит информацию где лежит проект-->
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <!-- обновили версию    -->
                    <version>3.8.1</version>
                    <configuration>
                        <!-- хочу чтобы версия исходников и таргет(скомпелированные) была 15     -->
                        <source>18</source>
                        <target>18</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.2</version>
                    <configuration>
                        <!--    <skip>true</skip> -->
                        <includes>
                            <include>
                                **/*Tes.java  <!--нам все равно что в начале, но в конце должно быть tes.java -->
                            </include>
                        </includes>
                    </configuration>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>

    <distributionManagement>
        <snapshotRepository>
            <id>nexus</id>
            <url>http://localhost:8081/repository/maven-snapshots/</url>
        </snapshotRepository>
        <repository>
            <id>nexus</id>
            <url>http://localhost:8081/repository/maven-releases/</url>
        </repository>
    </distributionManagement>

    <profiles>
        <profile>
            <id>prod
            </id> <!--в зависимости от инваремента будем разворачивать приложение локально или на продакшене и переоределять какието значения -->
            <!--  <build></build>могу переопределить секцию билд, изменить зависимости-->
            <properties><!--добавим свойство <app.env>dev</app.env> и переопределим его на prod-->
                <app.env>prod</app.env>
            </properties>
        </profile>
    </profiles>

</project>
